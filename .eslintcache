[{"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\index.tsx":"1","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\App.tsx":"2","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Home.tsx":"3","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Signup.tsx":"4","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Login.tsx":"5","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\AuthContext.tsx":"6","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\PrivateRoute.tsx":"7","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Firebase.tsx":"8","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\Sidebar.tsx":"9","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\NovaHome.tsx":"10","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\VoneHome.tsx":"11","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\SidebarData.tsx":"12","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Logout.tsx":"13","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\inkFormVone.tsx":"14","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\Category.tsx":"15","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Buttons\\actionButtons.tsx":"16","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\template.test.ts":"17","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\InkDisplay.tsx":"18","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\download.ts":"19","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Database\\NovaMaterials.ts":"20","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\inkFormNova.tsx":"21","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\index.ts":"22","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\hydration.ts":"23","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Database\\VoneMaterials.tsx":"24"},{"size":255,"mtime":1612811618969,"results":"25","hashOfConfig":"26"},{"size":1074,"mtime":1613924379761,"results":"27","hashOfConfig":"26"},{"size":1295,"mtime":1628537418439,"results":"28","hashOfConfig":"26"},{"size":2484,"mtime":1614214121861,"results":"29","hashOfConfig":"26"},{"size":2946,"mtime":1614539059489,"results":"30","hashOfConfig":"26"},{"size":1287,"mtime":1614535697978,"results":"31","hashOfConfig":"26"},{"size":529,"mtime":1612723290861,"results":"32","hashOfConfig":"26"},{"size":1027,"mtime":1615139193659,"results":"33","hashOfConfig":"26"},{"size":819,"mtime":1628624929867,"results":"34","hashOfConfig":"26"},{"size":1246,"mtime":1620143944937,"results":"35","hashOfConfig":"26"},{"size":1667,"mtime":1628616727656,"results":"36","hashOfConfig":"26"},{"size":564,"mtime":1628624102742,"results":"37","hashOfConfig":"26"},{"size":839,"mtime":1628623731829,"results":"38","hashOfConfig":"26"},{"size":2479,"mtime":1628619139637,"results":"39","hashOfConfig":"26"},{"size":907,"mtime":1620144515246,"results":"40","hashOfConfig":"26"},{"size":483,"mtime":1619018003428,"results":"41","hashOfConfig":"26"},{"size":1762,"mtime":1625690116586,"results":"42","hashOfConfig":"26"},{"size":2523,"mtime":1620150170686,"results":"43","hashOfConfig":"26"},{"size":284,"mtime":1612723493952,"results":"44","hashOfConfig":"26"},{"size":1038,"mtime":1620154732151,"results":"45","hashOfConfig":"26"},{"size":1764,"mtime":1620154754884,"results":"46","hashOfConfig":"26"},{"size":50,"mtime":1615418432320,"results":"47","hashOfConfig":"26"},{"size":3198,"mtime":1627582916108,"results":"48","hashOfConfig":"26"},{"size":2447,"mtime":1628619415119,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"tu8pg0",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\index.tsx",[],["111","112"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\App.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Home.tsx",["113"],"import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { useState } from \"react\";\r\nimport NovaHome from \"./Forms/Nova/NovaHome\";\r\nimport VoneHome from \"./Forms/Vone/VoneHome\";\r\nimport Sidebar from \"./SideNav/Sidebar\";\r\nimport { JumboButton } from \"@volterainc/ui-core\";\r\n\r\nconst Home: React.FC = () => {\r\n  const [platform, setPlatform] = useState(\"\");\r\n  const handleOnclick = (Type: string) => {\r\n    if (Type === \"Nova\") {\r\n      setPlatform(\"Nova\");\r\n    }\r\n    if (Type === \"Vone\") {\r\n      setPlatform(\"Vone\");\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const BacktoPlatform = () => {\r\n    setPlatform(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Sidebar />\r\n      <div className=\"Back\">\r\n        <a onClick={BacktoPlatform}>{\"<<Back\"}</a>\r\n      </div>\r\n      {platform === \"\" ? (\r\n        <div className=\"Main\">\r\n          <h1 className=\"Title\">Select Platform</h1>\r\n          <div className=\"Body\" style={{ minHeight: \"100vh\" }}>\r\n            <JumboButton text=\"Vone\" onClick={() => handleOnclick(\"Vone\")} />\r\n            <JumboButton text=\"Nova\" onClick={() => handleOnclick(\"Nova\")} />\r\n          </div>\r\n        </div>\r\n      ) : platform === \"Nova\" ? (\r\n        <NovaHome />\r\n      ) : (\r\n        <VoneHome />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Signup.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Login.tsx",["114"],"import React from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst googlelogo =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\";\r\ninterface FormData {\r\n  email: any;\r\n  password: any;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const { handleSubmit } = useForm<FormData>();\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { login, googlelogin }: any = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function onSubmit() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current?.value, passwordRef.current?.value);\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n    setLoading(false);\r\n    history.push(\"/\");\r\n  }\r\n  async function loginwithGoogle() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await googlelogin();\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n    setLoading(false);\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <Card style={{ width: \"25rem\" }}>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Log In</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Form.Group className=\"align-center\">\r\n              <Button\r\n                className=\"align-center\"\r\n                variant=\"outline-primary\"\r\n                onClick={loginwithGoogle}\r\n                block\r\n              >\r\n                <img\r\n                  className=\"align-left\"\r\n                  width=\"20px\"\r\n                  height=\"18px\"\r\n                  src={googlelogo}\r\n                />\r\n                Sign In with Google\r\n              </Button>\r\n            </Form.Group>\r\n            <div className=\"text-center\">or</div>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n        <div className=\"w-100 text-center mt-3\">Forgot Password?</div>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Don't have an account?<Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\AuthContext.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\PrivateRoute.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Firebase.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\Sidebar.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\NovaHome.tsx",["115","116","117","118","119","120","121","122"],"import FormNova from \"./inkFormNova\";\r\nimport { useState } from \"react\";\r\nimport { Loadmaterials_Nova } from \"../Database/NovaMaterials\";\r\nimport ActionButton from \"../Buttons/actionButtons\";\r\nimport Category from \"./Category\";\r\nconst initialTemplate = {\r\n  inktype: \"\",\r\n  name: \"\",\r\n  pass_spacing: 0,\r\n  dispense_height: 0,\r\n};\r\n\r\nconst NovaHome: React.FC = () => {\r\n  const [istemplateavailable, setTemplateAvailable] = useState(false);\r\n  const [istemplateSelected, setTemplateSelected] = useState(false);\r\n  const [template, setTemplate] = useState(initialTemplate);\r\n  const [details, setDetails] = useState(\"\");\r\n\r\n  const handleOnselect = (inkname: any) => {\r\n    if (!istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    }\r\n    if (istemplateSelected && details === inkname) {\r\n      setDetails(\"\");\r\n      setTemplateSelected(false);\r\n    }\r\n    if (istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    } else {\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Main\">\r\n      <div>\r\n        <h2 className=\"Title\">Select Material</h2>\r\n        <Category />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaHome;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\VoneHome.tsx",["123"],"import Form from \"./inkFormVone\";\r\nimport \"./VoneHome.css\";\r\nimport { useState } from \"react\";\r\nimport ActionButton from \"../Buttons/actionButtons\";\r\nimport DisplayMaterials from \"../Database/VoneMaterials\";\r\nimport { Ink } from \"@volterainc/utils-ink\";\r\nimport defaultValue from \"./template.test\";\r\nconst VoneHome: React.FC = () => {\r\n  const [istemplateavailable, setTemplateAvailable] = useState(false);\r\n  const [selectedInk, setSelectedInk] = useState(new Ink(defaultValue));\r\n\r\n  const useTemplate = () => {\r\n    setTemplateAvailable(true);\r\n  };\r\n  const blankTemplate = () => {\r\n    setSelectedInk(new Ink(defaultValue));\r\n    setTemplateAvailable(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      {!istemplateavailable ? (\r\n        <div className=\"body\">\r\n          <h2 className=\"Title\">Select Material</h2>\r\n\r\n          <DisplayMaterials\r\n            parentCallback={(ink: any) => setSelectedInk(new Ink(ink))}\r\n          />\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"50vh\" }}\r\n          >\r\n            <ActionButton\r\n              name=\"Blank Template\"\r\n              disabled={false}\r\n              onClick={blankTemplate}\r\n            />\r\n            <ActionButton\r\n              name=\"Use Template\"\r\n              disabled={selectedInk.name === \"\"}\r\n              onClick={useTemplate}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <a onClick={() => setTemplateAvailable(false)}>Back to Templates</a>\r\n          <Form ink={selectedInk} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoneHome;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\SidebarData.tsx",["124"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Logout.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\inkFormVone.tsx",["125"],"import { useForm } from \"react-hook-form\";\r\nimport download from \"./download\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../form.css\";\r\nimport { InkSettingsControl } from \"@volterainc/ui-ink\";\r\nimport { Ink, alterInk } from \"@volterainc/utils-ink\";\r\nimport defaultValue from \"./template.test\";\r\nimport { createInkDefinition } from \"./hydration\";\r\ninterface inkProps {\r\n  ink: Ink;\r\n}\r\nconst Form: React.FC<inkProps> = (props) => {\r\n  const { reset, handleSubmit, register } = useForm({});\r\n  const [newInk, setNewInk] = useState(new Ink(defaultValue));\r\n  useEffect(() => {\r\n    reset(props.ink);\r\n    setNewInk(props.ink);\r\n  }, []);\r\n  const onSubmit = handleSubmit(() => {\r\n    const formattedInk = createInkDefinition(newInk);\r\n    const data = JSON.stringify(formattedInk);\r\n    download(data, newInk.name + \".json\", \"text/plain\");\r\n  });\r\n  const handleOnChange = (ink: Ink, path: string, value: number | string) => {\r\n    setNewInk(alterInk(ink, path, value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Body\">\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <h2>Details</h2>\r\n\r\n          <label htmlFor=\"type\">Ink Type</label>\r\n          <input\r\n            name=\"type\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n            disabled={true}\r\n          />\r\n          <label htmlFor=\"name\"> Name</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) => handleOnChange(newInk, \"name\", e.target.value)}\r\n          />\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) =>\r\n              handleOnChange(newInk, \"description\", e.target.value)\r\n            }\r\n          />\r\n          <label htmlFor=\"useBy\"> Expiration Date: </label>\r\n          <input\r\n            name=\"useBy\"\r\n            type=\"date\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) => handleOnChange(newInk, \"useBy\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Settings</h3>\r\n          <InkSettingsControl\r\n            ink={newInk}\r\n            disabled={false}\r\n            onChange={handleOnChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Download</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Form;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\Category.tsx",["126","127","128"],"import { useState } from \"react\";\r\nimport InkDisplay from \"./InkDisplay\";\r\n\r\nconst Category: React.FC = () => {\r\n  const [selected, setSelected] = useState(false);\r\n  const [substrate, setSubstrate] = useState(false);\r\n  const [ink, setInk] = useState(false);\r\n  const handleOnclick = (Type: string) => (\r\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    console.log(Type);\r\n    setSelected(true);\r\n    if (Type === \"Substrate\") {\r\n      setSubstrate(true);\r\n    } else {\r\n      setInk(true);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {!selected ? (\r\n        <div className=\"Body\" style={{ minHeight: \"50vh\" }}>\r\n          <a onClick={handleOnclick(\"Substrate\")}>Substrate</a>\r\n          <a onClick={handleOnclick(\"Ink\")}>Ink</a>\r\n        </div>\r\n      ) : ink ? (\r\n        <InkDisplay />\r\n      ) : (\r\n        <InkDisplay />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Category;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Buttons\\actionButtons.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\template.test.ts",[],["129","130"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\InkDisplay.tsx",["131","132"],"import FormNova from \"./inkFormNova\";\r\nimport { useState } from \"react\";\r\nimport { Loadmaterials_Nova } from \"../Database/NovaMaterials\";\r\nimport ActionButton from \"../Buttons/actionButtons\";\r\n\r\nconst InkDisplay: React.FC = () => {\r\n  const [istemplateavailable, setTemplateAvailable] = useState(false);\r\n  const [istemplateSelected, setTemplateSelected] = useState(false);\r\n  const [details, setDetails] = useState(\"\");\r\n  const data = Loadmaterials_Nova().data;\r\n  const handleOnselect = (inkname: any) => {\r\n    if (!istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    }\r\n    if (istemplateSelected && details === inkname) {\r\n      setDetails(\"\");\r\n      setTemplateSelected(false);\r\n    }\r\n    if (istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    } else {\r\n    }\r\n  };\r\n  const useTemplate = () => {\r\n    setTemplateAvailable(true);\r\n  };\r\n  const blankTemplate = () => {\r\n    setDetails(\"\");\r\n    setTemplateAvailable(true);\r\n  };\r\n  return (\r\n    <div className=\"Main\">\r\n      {!istemplateavailable ? (\r\n        <div>\r\n          <ul>\r\n            {data.map((val, key) => {\r\n              return (\r\n                <a\r\n                  key={key}\r\n                  className=\"row\"\r\n                  onClick={() => {\r\n                    handleOnselect(val);\r\n                  }}\r\n                >\r\n                  <div id=\"name\">{val}</div>\r\n                </a>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n          >\r\n            <ActionButton\r\n              name=\"Blank Template\"\r\n              disabled={false}\r\n              onClick={() => {\r\n                setTemplateAvailable(true);\r\n              }}\r\n            />\r\n            <ActionButton\r\n              name=\"Use Template\"\r\n              disabled={!istemplateSelected}\r\n              onClick={useTemplate}\r\n            />\r\n            <ActionButton name=\"Update\" disabled={!istemplateSelected} />\r\n            <ActionButton name=\"Delete\" disabled={!istemplateSelected} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <button onClick={() => setTemplateAvailable(false)}>\r\n            Back to Templates\r\n          </button>\r\n          <FormNova inkID={details}> </FormNova>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InkDisplay;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\download.ts",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Database\\NovaMaterials.ts",["133","134","135"],"import { relative } from \"path\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../index\";\r\n\r\nexport function Loadmaterials_Nova() {\r\n  const [data, setData] = useState([\"\"]);\r\n  const VoneCollection = db.collection(\"Vone\");\r\n\r\n  useEffect(() => {\r\n    try {\r\n      VoneCollection.get().then((querySnapshot) => {\r\n        querySnapshot.docs.forEach((result) => {\r\n          if (data[0] === \"\") {\r\n            data[0] = result.data()[\"Id\"];\r\n          } else {\r\n            setData((arr) => [...arr, result.data()[\"Id\"]]);\r\n          }\r\n        });\r\n      });\r\n    } catch {\r\n      console.error();\r\n    }\r\n  }, []);\r\n  return {\r\n    data,\r\n  };\r\n}\r\n// export function GetInkProps(inkID: string) {\r\n//   const [data, setData] = useState([\"\"]);\r\n//   const VoneCollection = db.collection(\"Vone\").doc(inkID);\r\n\r\n//   useEffect(() => {\r\n//    VoneCollection.get().then((querySnapshot) => {\r\n//         querySnapshot.data((result) => {\r\n//        result.\r\n\r\n//   }, []);\r\n//   return {\r\n//     data,\r\n//   };\r\n// }\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\inkFormNova.tsx",["136"],"import { useForm } from \"react-hook-form\";\r\n// import { GetInkProps } from \"../Database/NovaMaterials\";\r\nimport \"../form.css\";\r\ninterface profile {\r\n  name?: string;\r\n  inktype?: string;\r\n  expiration?: Date;\r\n  pass_spacing?: Number;\r\n  dispense_height?: Number;\r\n}\r\ninterface inkProps {\r\n  inkID: string;\r\n}\r\nconst FormNova: React.FC<inkProps> = (props) => {\r\n  // const values = GetInkProps(props.inkID);\r\n  // console.log(values);\r\n  const { handleSubmit, register } = useForm<profile>({\r\n    defaultValues: {},\r\n  });\r\n  const onSubmit = handleSubmit((obj) => {\r\n    const data = JSON.stringify(obj);\r\n  });\r\n\r\n  return (\r\n    <div className=\"Body\">\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <h3>Details</h3>\r\n\r\n          <label htmlFor=\"material\">Ink Type</label>\r\n          <input\r\n            name=\"material\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n          />\r\n          <label htmlFor=\"name\"> Name</label>\r\n          <input name=\"name\" type=\"text\" ref={register({ required: true })} />\r\n          <label htmlFor=\"expiration\"> Expiration Date: </label>\r\n          <input\r\n            name=\"expiration\"\r\n            type=\"date\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Settings</h3>\r\n          <h4>Probing</h4>\r\n          <input\r\n            name=\"probePitch\"\r\n            type=\"number\"\r\n            step=\"1\"\r\n            ref={register({ required: true })}\r\n          />\r\n          <label htmlFor=\"probePitch\">ProbePitch</label>\r\n          {/* <Dispensing ref={register({ required: true })}></Dispensing> */}\r\n        </div>\r\n        <button type=\"submit\">submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default FormNova;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\index.ts",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\hydration.ts",["137","138"],"import { Ink } from \"@volterainc/utils-ink\";\r\n\r\nexport declare const ConductiveInkTypes: {\r\n  ConductiveInk: string;\r\n  FlexibleConductiveInk: string;\r\n  ExperimentalInk: string;\r\n  CustomInk: string;\r\n};\r\nexport declare const SolderPasteTypes: {\r\n  SolderPaste: string;\r\n  Sn63SolderPaste: string;\r\n  CustomPaste: string;\r\n};\r\ntype InkSettingT = {\r\n  min: number;\r\n  max: number;\r\n  defaultValue: number;\r\n  precision: number;\r\n};\r\ntype InkType =\r\n  | typeof ConductiveInkTypes[keyof typeof ConductiveInkTypes]\r\n  | typeof SolderPasteTypes[keyof typeof SolderPasteTypes];\r\ntype LabelT = {\r\n  color: string;\r\n  type?: string;\r\n};\r\ndeclare type HeatingProfileStepT = {\r\n  temperature: number;\r\n  duration: number;\r\n};\r\ndeclare type HeatingProfileT = HeatingProfileStepT[];\r\ndeclare type InkSettingWithOptionalValue = InkSettingT & {\r\n  value?: number;\r\n};\r\ndeclare type SettingsMapWithOptionValues = {\r\n  [key: string]: InkSettingWithOptionalValue;\r\n};\r\ntype InkSettingsWithOptionalValues = {\r\n  [key: string]: SettingsMapWithOptionValues;\r\n};\r\ndeclare type ConstructorArgsT = {\r\n  type: InkType;\r\n  name: string;\r\n  organization: string;\r\n  useBy: string;\r\n  storage: string;\r\n  material?: string;\r\n  description: string;\r\n  label: LabelT;\r\n  settings: InkSettingsWithOptionalValues;\r\n  heatingProfile: HeatingProfileT;\r\n};\r\nexport declare type InkSetting = InkSettingT & {\r\n  value: number;\r\n};\r\ndeclare type SettingsMapT = {\r\n  [key: string]: InkSetting;\r\n};\r\ndeclare type InkSettingsT = {\r\n  [key: string]: SettingsMapT;\r\n};\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\ntype Settings = {\r\n  settings: {\r\n    probing: { [key: string]: InkSettingsT };\r\n    dispensing: { [key: string]: InkSettingsT };\r\n  };\r\n};\r\ntype InkDefinition = {\r\n  name: string;\r\n  type: InkType;\r\n  organization: string;\r\n  useBy: string;\r\n  storage: string;\r\n  material?: string;\r\n  description: string;\r\n  label: LabelT;\r\n  heatingProfile: HeatingProfileT;\r\n  settings: Settings;\r\n};\r\nexport function setDefaultToValue(setting: InkSetting): InkSettingT {\r\n  const { min, max, defaultValue, precision, value } = setting;\r\n  return {\r\n    min,\r\n    max,\r\n    precision,\r\n    defaultValue: value,\r\n  };\r\n}\r\nfunction setSettings(settings: InkSettingsT): Settings {\r\n  const newSettingMap = new Map();\r\n  const newSettingObj = Object.entries(settings);\r\n\r\n  for (const [key, value] of newSettingObj) {\r\n    if (value && typeof Object) {\r\n      const nestedMap = new Map();\r\n      const nestedObj = Object.entries(value);\r\n      for (const [key, value] of nestedObj) {\r\n        nestedMap.set(key, setDefaultToValue(value));\r\n      }\r\n      newSettingMap.set(key, Object.fromEntries(nestedMap));\r\n    } else {\r\n    }\r\n  }\r\n  return Object.fromEntries(newSettingMap);\r\n}\r\n\r\nexport function createInkDefinition({\r\n  name,\r\n  type,\r\n  organization,\r\n  useBy,\r\n  storage,\r\n  material,\r\n  description,\r\n  label,\r\n  heatingProfile,\r\n  settings,\r\n}: Ink): InkDefinition {\r\n  return {\r\n    name,\r\n    type,\r\n    organization,\r\n    useBy,\r\n    storage,\r\n    material,\r\n    description,\r\n    label,\r\n    heatingProfile,\r\n    settings: setSettings(settings),\r\n  };\r\n}\r\n//return inksetting type (no value)\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Database\\VoneMaterials.tsx",["139","140","141"],"import { useEffect, useState } from \"react\";\r\nimport { standardOrder, Ink } from \"@volterainc/utils-ink\";\r\nimport { Spinner } from \"@volterainc/ui-core\";\r\n\r\nconst API = {\r\n  ink: \" https://api.github.com/repos/VolteraInc/ink-database/contents/inks\",\r\n  paste:\r\n    \" https://api.github.com/repos/VolteraInc/ink-database/contents/pastes\",\r\n};\r\n\r\n//number of ink per type to display\r\nconst displayLength = 4;\r\n\r\nasync function fetchInk(inkAddress: string) {\r\n  try {\r\n    let response = await fetch(inkAddress);\r\n    const dbObj = await response.json();\r\n\r\n    return dbObj;\r\n  } catch {\r\n    console.error();\r\n  }\r\n}\r\nexport function FetchMaterials_Vone() {\r\n  const [data, setData] = useState([]);\r\n  let inkObj: any = [];\r\n\r\n  useEffect(() => {\r\n    async function fetchAPI() {\r\n      try {\r\n        let responseInk = await fetch(API.ink);\r\n        let responsePaste = await fetch(API.paste);\r\n        const dbInk = await responseInk.json();\r\n        const dbPaste = await responsePaste.json();\r\n        for (let x = 0; x < dbInk.length; x++) {\r\n          inkObj.push(await fetchInk(dbInk[x].download_url));\r\n        }\r\n        for (let x = 0; x < dbPaste.length; x++) {\r\n          inkObj.push(await fetchInk(dbPaste[x].download_url));\r\n        }\r\n        setData(inkObj);\r\n      } catch {\r\n        console.error();\r\n      }\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n  return data;\r\n}\r\n\r\nconst DisplayMaterials = ({ parentCallback }: any) => {\r\n  const data = FetchMaterials_Vone();\r\n\r\n  return (\r\n    <ul>\r\n      {data.length === 0 ? (\r\n        <Spinner label=\"loading materials\" />\r\n      ) : (\r\n        <div className=\"list-inks\">\r\n          {standardOrder(data).map((typeInks) => {\r\n            const type = typeInks[0].type;\r\n            return (\r\n              <div key={type} className=\"ink-selection-list\">\r\n                <div className=\"type\">\r\n                  <h4>{type}</h4>\r\n                </div>\r\n                {typeInks.slice(0, displayLength).map((inks) => {\r\n                  return (\r\n                    <a\r\n                      key={inks.id}\r\n                      className=\"row\"\r\n                      onClick={() => parentCallback(inks)}\r\n                    >\r\n                      <div id=\"name\">{inks.name}</div>\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nexport default DisplayMaterials;\r\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":29,"column":9,"nodeType":"148","endLine":29,"endColumn":37},{"ruleId":"149","severity":1,"message":"150","line":60,"column":17,"nodeType":"148","endLine":65,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":16},{"ruleId":"151","severity":1,"message":"155","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":28},{"ruleId":"151","severity":1,"message":"156","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":20},{"ruleId":"151","severity":1,"message":"157","line":14,"column":10,"nodeType":"153","messageId":"154","endLine":14,"endColumn":29},{"ruleId":"151","severity":1,"message":"158","line":14,"column":31,"nodeType":"153","messageId":"154","endLine":14,"endColumn":51},{"ruleId":"151","severity":1,"message":"159","line":16,"column":10,"nodeType":"153","messageId":"154","endLine":16,"endColumn":18},{"ruleId":"151","severity":1,"message":"160","line":16,"column":20,"nodeType":"153","messageId":"154","endLine":16,"endColumn":31},{"ruleId":"151","severity":1,"message":"161","line":19,"column":9,"nodeType":"153","messageId":"154","endLine":19,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":47,"column":11,"nodeType":"148","endLine":47,"endColumn":58},{"ruleId":"151","severity":1,"message":"162","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":18,"column":6,"nodeType":"165","endLine":18,"endColumn":8,"suggestions":"166"},{"ruleId":"151","severity":1,"message":"167","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":23,"column":11,"nodeType":"148","endLine":23,"endColumn":51},{"ruleId":"146","severity":1,"message":"147","line":24,"column":11,"nodeType":"148","endLine":24,"endColumn":45},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"151","severity":1,"message":"168","line":29,"column":9,"nodeType":"153","messageId":"154","endLine":29,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":40,"column":17,"nodeType":"148","endLine":46,"endColumn":18},{"ruleId":"151","severity":1,"message":"169","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":18},{"ruleId":"151","severity":1,"message":"170","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":13},{"ruleId":"163","severity":1,"message":"171","line":23,"column":6,"nodeType":"165","endLine":23,"endColumn":8,"suggestions":"172"},{"ruleId":"151","severity":1,"message":"173","line":21,"column":11,"nodeType":"153","messageId":"154","endLine":21,"endColumn":15},{"ruleId":"151","severity":1,"message":"174","line":41,"column":14,"nodeType":"153","messageId":"154","endLine":41,"endColumn":30},{"ruleId":"151","severity":1,"message":"175","line":83,"column":21,"nodeType":"153","messageId":"154","endLine":83,"endColumn":33},{"ruleId":"151","severity":1,"message":"176","line":2,"column":25,"nodeType":"153","messageId":"154","endLine":2,"endColumn":28},{"ruleId":"163","severity":1,"message":"177","line":47,"column":6,"nodeType":"165","endLine":47,"endColumn":8,"suggestions":"178"},{"ruleId":"146","severity":1,"message":"147","line":69,"column":21,"nodeType":"148","endLine":73,"endColumn":22},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@typescript-eslint/no-unused-vars","'FormNova' is defined but never used.","Identifier","unusedVar","'Loadmaterials_Nova' is defined but never used.","'ActionButton' is defined but never used.","'istemplateavailable' is assigned a value but never used.","'setTemplateAvailable' is assigned a value but never used.","'template' is assigned a value but never used.","'setTemplate' is assigned a value but never used.","'handleOnselect' is assigned a value but never used.","'ExitToAppIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.ink' and 'reset'. Either include them or remove the dependency array. If 'setNewInk' needs the current value of 'props.ink', you can also switch to useReducer instead of useState and read 'props.ink' in the reducer.","ArrayExpression",["181"],"'substrate' is assigned a value but never used.","'blankTemplate' is assigned a value but never used.","'relative' is defined but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'VoneCollection' and 'data'. Either include them or remove the dependency array.",["182"],"'data' is assigned a value but never used.","'ConstructorArgsT' is defined but never used.","'defaultValue' is assigned a value but never used.","'Ink' is defined but never used.","React Hook useEffect has a missing dependency: 'inkObj'. Either include it or remove the dependency array.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [props.ink, reset]",{"range":"190","text":"191"},"Update the dependencies array to be: [VoneCollection, data]",{"range":"192","text":"193"},"Update the dependencies array to be: [inkObj]",{"range":"194","text":"195"},[643,645],"[props.ink, reset]",[638,640],"[VoneCollection, data]",[1356,1358],"[inkObj]"]