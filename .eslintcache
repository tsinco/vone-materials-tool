[{"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\index.tsx":"1","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\App.tsx":"2","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Home.tsx":"3","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Signup.tsx":"4","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Login.tsx":"5","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\AuthContext.tsx":"6","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\PrivateRoute.tsx":"7","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Firebase.tsx":"8","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\Sidebar.tsx":"9","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\NovaHome.tsx":"10","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\VoneHome.tsx":"11","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\SidebarData.tsx":"12","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Database\\VoneMaterials.ts":"13","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Logout.tsx":"14","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\inkFormVone.tsx":"15","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\Category.tsx":"16","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Buttons\\actionButtons.tsx":"17","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\template.test.ts":"18","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\InkDisplay.tsx":"19","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\download.ts":"20","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Database\\NovaMaterials.ts":"21","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\inkFormNova.tsx":"22","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\index.ts":"23","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\hydration.ts":"24"},{"size":255,"mtime":1612811618969,"results":"25","hashOfConfig":"26"},{"size":1074,"mtime":1613924379761,"results":"27","hashOfConfig":"26"},{"size":1374,"mtime":1625838566863,"results":"28","hashOfConfig":"26"},{"size":2484,"mtime":1614214121861,"results":"29","hashOfConfig":"26"},{"size":2946,"mtime":1614539059489,"results":"30","hashOfConfig":"26"},{"size":1287,"mtime":1614535697978,"results":"31","hashOfConfig":"26"},{"size":529,"mtime":1612723290861,"results":"32","hashOfConfig":"26"},{"size":1027,"mtime":1615139193659,"results":"33","hashOfConfig":"26"},{"size":759,"mtime":1613928692222,"results":"34","hashOfConfig":"26"},{"size":1246,"mtime":1620143944937,"results":"35","hashOfConfig":"26"},{"size":2546,"mtime":1625837949791,"results":"36","hashOfConfig":"26"},{"size":533,"mtime":1614214198727,"results":"37","hashOfConfig":"26"},{"size":1091,"mtime":1625684347511,"results":"38","hashOfConfig":"26"},{"size":560,"mtime":1612803782336,"results":"39","hashOfConfig":"26"},{"size":2955,"mtime":1627498771089,"results":"40","hashOfConfig":"26"},{"size":907,"mtime":1620144515246,"results":"41","hashOfConfig":"26"},{"size":483,"mtime":1619018003428,"results":"42","hashOfConfig":"26"},{"size":1762,"mtime":1625690116586,"results":"43","hashOfConfig":"26"},{"size":2523,"mtime":1620150170686,"results":"44","hashOfConfig":"26"},{"size":284,"mtime":1612723493952,"results":"45","hashOfConfig":"26"},{"size":1038,"mtime":1620154732151,"results":"46","hashOfConfig":"26"},{"size":1764,"mtime":1620154754884,"results":"47","hashOfConfig":"26"},{"size":50,"mtime":1615418432320,"results":"48","hashOfConfig":"26"},{"size":4042,"mtime":1627505988553,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"tu8pg0",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\index.tsx",[],["111","112"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\App.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Home.tsx",["113","114","115","116"],"import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { useState } from \"react\";\r\nimport NovaHome from \"./Forms/Nova/NovaHome\";\r\nimport VoneHome from \"./Forms/Vone/VoneHome\";\r\nimport Sidebar from \"./SideNav/Sidebar\";\r\nconst Home: React.FC = () => {\r\n  const [selected, setSelected] = useState(false);\r\n  const [nova, setNova] = useState(false);\r\n  const [vone, setVone] = useState(false);\r\n  const handleOnclick = (Type: string) => (\r\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    console.log(Type);\r\n    setSelected(true);\r\n    if (Type === \"Nova\") {\r\n      setNova(true);\r\n    } else {\r\n      setVone(true);\r\n    }\r\n  };\r\n  const BacktoPlatform = () => {\r\n    setSelected(false);\r\n    setNova(false);\r\n    setVone(false);\r\n  };\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Sidebar />\r\n      <div className=\"Back\">\r\n        <a onClick={BacktoPlatform}>{\"<<Back\"}</a>\r\n      </div>\r\n      {!selected ? (\r\n        <div className=\"Main\">\r\n          <h1 className=\"Title\">Select Platform</h1>\r\n          <div className=\"Body\" style={{ minHeight: \"50vh\" }}>\r\n            <a onClick={handleOnclick(\"Vone\")}>Vone</a>\r\n            <a onClick={handleOnclick(\"Nova\")}>Nova</a>\r\n          </div>\r\n        </div>\r\n      ) : nova ? (\r\n        <NovaHome />\r\n      ) : (\r\n        <VoneHome />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Signup.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Login.tsx",["117"],"import React from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst googlelogo =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\";\r\ninterface FormData {\r\n  email: any;\r\n  password: any;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const { handleSubmit } = useForm<FormData>();\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { login, googlelogin }: any = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function onSubmit() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current?.value, passwordRef.current?.value);\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n    setLoading(false);\r\n    history.push(\"/\");\r\n  }\r\n  async function loginwithGoogle() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await googlelogin();\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n    setLoading(false);\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <Card style={{ width: \"25rem\" }}>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Log In</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Form.Group className=\"align-center\">\r\n              <Button\r\n                className=\"align-center\"\r\n                variant=\"outline-primary\"\r\n                onClick={loginwithGoogle}\r\n                block\r\n              >\r\n                <img\r\n                  className=\"align-left\"\r\n                  width=\"20px\"\r\n                  height=\"18px\"\r\n                  src={googlelogo}\r\n                />\r\n                Sign In with Google\r\n              </Button>\r\n            </Form.Group>\r\n            <div className=\"text-center\">or</div>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n        <div className=\"w-100 text-center mt-3\">Forgot Password?</div>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Don't have an account?<Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\AuthContext.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\PrivateRoute.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Firebase.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\Sidebar.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\NovaHome.tsx",["118","119","120","121","122","123","124","125"],"import FormNova from \"./inkFormNova\";\r\nimport { useState } from \"react\";\r\nimport { Loadmaterials_Nova } from \"../Database/NovaMaterials\";\r\nimport ActionButton from \"../Buttons/actionButtons\";\r\nimport Category from \"./Category\";\r\nconst initialTemplate = {\r\n  inktype: \"\",\r\n  name: \"\",\r\n  pass_spacing: 0,\r\n  dispense_height: 0,\r\n};\r\n\r\nconst NovaHome: React.FC = () => {\r\n  const [istemplateavailable, setTemplateAvailable] = useState(false);\r\n  const [istemplateSelected, setTemplateSelected] = useState(false);\r\n  const [template, setTemplate] = useState(initialTemplate);\r\n  const [details, setDetails] = useState(\"\");\r\n\r\n  const handleOnselect = (inkname: any) => {\r\n    if (!istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    }\r\n    if (istemplateSelected && details === inkname) {\r\n      setDetails(\"\");\r\n      setTemplateSelected(false);\r\n    }\r\n    if (istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    } else {\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Main\">\r\n      <div>\r\n        <h2 className=\"Title\">Select Material</h2>\r\n        <Category />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaHome;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\VoneHome.tsx",["126"],"import Form from \"./inkFormVone\";\r\nimport \"./VoneHome.css\";\r\nimport { useState } from \"react\";\r\nimport { Loadmaterials_Vone } from \"../Database/VoneMaterials\";\r\nimport ActionButton from \"../Buttons/actionButtons\";\r\n\r\nconst VoneHome: React.FC = () => {\r\n  const [istemplateavailable, setTemplateAvailable] = useState(false);\r\n  const [istemplateSelected, setTemplateSelected] = useState(false);\r\n  const [details, setDetails] = useState(\"\");\r\n  const data = Loadmaterials_Vone().data;\r\n\r\n  const handleOnselect = (inkname: any) => {\r\n    if (!istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    }\r\n    if (istemplateSelected && details === inkname) {\r\n      setDetails(\"\");\r\n      setTemplateSelected(false);\r\n    }\r\n    if (istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    } else {\r\n    }\r\n  };\r\n  const useTemplate = () => {\r\n    setTemplateAvailable(true);\r\n  };\r\n  const blankTemplate = () => {\r\n    setDetails(\"\");\r\n    setTemplateAvailable(true);\r\n  };\r\n  return (\r\n    <div className=\"Main\">\r\n      {!istemplateavailable ? (\r\n        <div className=\"body\">\r\n          <h2 className=\"Title\">Select Material</h2>\r\n          <ul>\r\n            {data.map((val, key) => {\r\n              return (\r\n                <a\r\n                  key={key}\r\n                  className=\"row\"\r\n                  onClick={() => {\r\n                    handleOnselect(val);\r\n                  }}\r\n                >\r\n                  <div id=\"name\">{val}</div>\r\n                </a>\r\n              );\r\n            })}\r\n          </ul>\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n          >\r\n            <ActionButton\r\n              name=\"Blank Template\"\r\n              disabled={false}\r\n              onClick={blankTemplate}\r\n            />\r\n            <ActionButton\r\n              name=\"Use Template\"\r\n              disabled={!istemplateSelected}\r\n              onClick={useTemplate}\r\n            />\r\n            <ActionButton\r\n              name=\"Update\"\r\n              disabled={!istemplateSelected}\r\n              onClick={() => {}}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <button onClick={() => setTemplateAvailable(false)}>\r\n            Back to Templates\r\n          </button>\r\n          <Form inkName={details} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoneHome;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\SidebarData.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Database\\VoneMaterials.ts",["127","128","129"],"import { useEffect, useState } from \"react\";\r\nimport { standardOrder } from \"@volterainc/utils-ink\";\r\nimport { Ink } from \"@volterainc/ui-ink/node_modules/@volterainc/utils-ink\";\r\n\r\n//Problem: API doesn't have useBy properties, will have to fetch every single one(takes a while)\r\n// and use standarOrder to sort.\r\n\r\nexport function Loadmaterials_Vone() {\r\n  const DisplayLength = 5;\r\n  const [data, setData] = useState([\"\"]);\r\n  const inkurl =\r\n    \" https://api.github.com/repos/VolteraInc/ink-database/contents/inks\";\r\n  const pasteurl =\r\n    \" https://api.github.com/repos/VolteraInc/ink-database/contents/pastes\";\r\n  useEffect(() => {\r\n    async function fetchAPI() {\r\n      try {\r\n        let response = await fetch(inkurl);\r\n        const data = await response.json();\r\n        for (let x = 0; x < DisplayLength; x++) {\r\n          let name = data[x].name;\r\n\r\n          setData((arr) => [...arr, name.replace(\".json\", \"\")]);\r\n        }\r\n        console.log(data);\r\n      } catch {\r\n        console.error();\r\n      }\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return {\r\n    data,\r\n  };\r\n}\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Logout.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\inkFormVone.tsx",["130"],"import { useForm } from \"react-hook-form\";\r\nimport download from \"./download\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../form.css\";\r\nimport { InkSettingsControl } from \"@volterainc/ui-ink\";\r\nimport { Ink, alterInk } from \"@volterainc/utils-ink\";\r\nimport defaultValue from \"./template.test\";\r\nimport { Hydrate, Dehydrate } from \"./hydration\";\r\ninterface inkProps {\r\n  inkName: string;\r\n}\r\nconst url = {\r\n  ink: \"https://raw.githubusercontent.com/VolteraInc/ink-database/master/inks/\",\r\n  paste:\r\n    \"https://raw.githubusercontent.com/VolteraInc/ink-database/master/pastes/\",\r\n};\r\n// trying to get rid of the \"otional values\" in settings\r\nconst Form: React.FC<inkProps> = (props) => {\r\n  const { reset, handleSubmit, register } = useForm({});\r\n  const [newInk, setnewInk] = useState(new Ink(defaultValue));\r\n  useEffect(() => {\r\n    const downloadurl = url.ink + props.inkName + \".json\";\r\n    const getInk = async () => {\r\n      let response = await fetch(downloadurl);\r\n      const data = await response.json();\r\n      reset(data);\r\n      setnewInk(new Ink(data));\r\n    };\r\n    getInk();\r\n  }, []);\r\n\r\n  const onSubmit = handleSubmit(() => {\r\n    const formattedInk = Hydrate(Dehydrate(newInk));\r\n    const data = JSON.stringify(formattedInk);\r\n    download(data, newInk.name + \".json\", \"text/plain\");\r\n  });\r\n  const handleOnchange = (ink: Ink, path: string, value: number | string) => {\r\n    setnewInk(alterInk(ink, path, value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Body\">\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <h2>Details</h2>\r\n\r\n          <label htmlFor=\"material\">Ink Type</label>\r\n          <input\r\n            name=\"material\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n            disabled={true}\r\n          />\r\n          <label htmlFor=\"name\"> Name</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) => handleOnchange(newInk, \"name\", e.target.value)}\r\n          />\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) =>\r\n              handleOnchange(newInk, \"description\", e.target.value)\r\n            }\r\n          />\r\n          <label htmlFor=\"useBy\"> Expiration Date: </label>\r\n          <input\r\n            name=\"useBy\"\r\n            type=\"date\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) => handleOnchange(newInk, \"useBy\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Settings</h3>\r\n          <InkSettingsControl\r\n            ink={newInk}\r\n            disabled={false}\r\n            onChange={handleOnchange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Download</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Form;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\Category.tsx",["131","132","133"],"import { useState } from \"react\";\r\nimport InkDisplay from \"./InkDisplay\";\r\n\r\nconst Category: React.FC = () => {\r\n  const [selected, setSelected] = useState(false);\r\n  const [substrate, setSubstrate] = useState(false);\r\n  const [ink, setInk] = useState(false);\r\n  const handleOnclick = (Type: string) => (\r\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    console.log(Type);\r\n    setSelected(true);\r\n    if (Type === \"Substrate\") {\r\n      setSubstrate(true);\r\n    } else {\r\n      setInk(true);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {!selected ? (\r\n        <div className=\"Body\" style={{ minHeight: \"50vh\" }}>\r\n          <a onClick={handleOnclick(\"Substrate\")}>Substrate</a>\r\n          <a onClick={handleOnclick(\"Ink\")}>Ink</a>\r\n        </div>\r\n      ) : ink ? (\r\n        <InkDisplay />\r\n      ) : (\r\n        <InkDisplay />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Category;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Buttons\\actionButtons.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\template.test.ts",[],["134","135"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\InkDisplay.tsx",["136","137"],"import FormNova from \"./inkFormNova\";\r\nimport { useState } from \"react\";\r\nimport { Loadmaterials_Nova } from \"../Database/NovaMaterials\";\r\nimport ActionButton from \"../Buttons/actionButtons\";\r\n\r\nconst InkDisplay: React.FC = () => {\r\n  const [istemplateavailable, setTemplateAvailable] = useState(false);\r\n  const [istemplateSelected, setTemplateSelected] = useState(false);\r\n  const [details, setDetails] = useState(\"\");\r\n  const data = Loadmaterials_Nova().data;\r\n  const handleOnselect = (inkname: any) => {\r\n    if (!istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    }\r\n    if (istemplateSelected && details === inkname) {\r\n      setDetails(\"\");\r\n      setTemplateSelected(false);\r\n    }\r\n    if (istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    } else {\r\n    }\r\n  };\r\n  const useTemplate = () => {\r\n    setTemplateAvailable(true);\r\n  };\r\n  const blankTemplate = () => {\r\n    setDetails(\"\");\r\n    setTemplateAvailable(true);\r\n  };\r\n  return (\r\n    <div className=\"Main\">\r\n      {!istemplateavailable ? (\r\n        <div>\r\n          <ul>\r\n            {data.map((val, key) => {\r\n              return (\r\n                <a\r\n                  key={key}\r\n                  className=\"row\"\r\n                  onClick={() => {\r\n                    handleOnselect(val);\r\n                  }}\r\n                >\r\n                  <div id=\"name\">{val}</div>\r\n                </a>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n          >\r\n            <ActionButton\r\n              name=\"Blank Template\"\r\n              disabled={false}\r\n              onClick={() => {\r\n                setTemplateAvailable(true);\r\n              }}\r\n            />\r\n            <ActionButton\r\n              name=\"Use Template\"\r\n              disabled={!istemplateSelected}\r\n              onClick={useTemplate}\r\n            />\r\n            <ActionButton name=\"Update\" disabled={!istemplateSelected} />\r\n            <ActionButton name=\"Delete\" disabled={!istemplateSelected} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <button onClick={() => setTemplateAvailable(false)}>\r\n            Back to Templates\r\n          </button>\r\n          <FormNova inkID={details}> </FormNova>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InkDisplay;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\download.ts",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Database\\NovaMaterials.ts",["138","139","140"],"import { relative } from \"path\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../index\";\r\n\r\nexport function Loadmaterials_Nova() {\r\n  const [data, setData] = useState([\"\"]);\r\n  const VoneCollection = db.collection(\"Vone\");\r\n\r\n  useEffect(() => {\r\n    try {\r\n      VoneCollection.get().then((querySnapshot) => {\r\n        querySnapshot.docs.forEach((result) => {\r\n          if (data[0] === \"\") {\r\n            data[0] = result.data()[\"Id\"];\r\n          } else {\r\n            setData((arr) => [...arr, result.data()[\"Id\"]]);\r\n          }\r\n        });\r\n      });\r\n    } catch {\r\n      console.error();\r\n    }\r\n  }, []);\r\n  return {\r\n    data,\r\n  };\r\n}\r\n// export function GetInkProps(inkID: string) {\r\n//   const [data, setData] = useState([\"\"]);\r\n//   const VoneCollection = db.collection(\"Vone\").doc(inkID);\r\n\r\n//   useEffect(() => {\r\n//    VoneCollection.get().then((querySnapshot) => {\r\n//         querySnapshot.data((result) => {\r\n//        result.\r\n\r\n//   }, []);\r\n//   return {\r\n//     data,\r\n//   };\r\n// }\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\inkFormNova.tsx",["141"],"import { useForm } from \"react-hook-form\";\r\n// import { GetInkProps } from \"../Database/NovaMaterials\";\r\nimport \"../form.css\";\r\ninterface profile {\r\n  name?: string;\r\n  inktype?: string;\r\n  expiration?: Date;\r\n  pass_spacing?: Number;\r\n  dispense_height?: Number;\r\n}\r\ninterface inkProps {\r\n  inkID: string;\r\n}\r\nconst FormNova: React.FC<inkProps> = (props) => {\r\n  // const values = GetInkProps(props.inkID);\r\n  // console.log(values);\r\n  const { handleSubmit, register } = useForm<profile>({\r\n    defaultValues: {},\r\n  });\r\n  const onSubmit = handleSubmit((obj) => {\r\n    const data = JSON.stringify(obj);\r\n  });\r\n\r\n  return (\r\n    <div className=\"Body\">\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <h3>Details</h3>\r\n\r\n          <label htmlFor=\"material\">Ink Type</label>\r\n          <input\r\n            name=\"material\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n          />\r\n          <label htmlFor=\"name\"> Name</label>\r\n          <input name=\"name\" type=\"text\" ref={register({ required: true })} />\r\n          <label htmlFor=\"expiration\"> Expiration Date: </label>\r\n          <input\r\n            name=\"expiration\"\r\n            type=\"date\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Settings</h3>\r\n          <h4>Probing</h4>\r\n          <input\r\n            name=\"probePitch\"\r\n            type=\"number\"\r\n            step=\"1\"\r\n            ref={register({ required: true })}\r\n          />\r\n          <label htmlFor=\"probePitch\">ProbePitch</label>\r\n          {/* <Dispensing ref={register({ required: true })}></Dispensing> */}\r\n        </div>\r\n        <button type=\"submit\">submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default FormNova;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\index.ts",[],["142","143"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\hydration.ts",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":10,"column":10,"nodeType":"150","messageId":"151","endLine":10,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":31,"column":9,"nodeType":"154","endLine":31,"endColumn":37},{"ruleId":"152","severity":1,"message":"153","line":37,"column":13,"nodeType":"154","endLine":37,"endColumn":48},{"ruleId":"152","severity":1,"message":"153","line":38,"column":13,"nodeType":"154","endLine":38,"endColumn":48},{"ruleId":"155","severity":1,"message":"156","line":60,"column":17,"nodeType":"154","endLine":65,"endColumn":19},{"ruleId":"148","severity":1,"message":"157","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":16},{"ruleId":"148","severity":1,"message":"158","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":28},{"ruleId":"148","severity":1,"message":"159","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":20},{"ruleId":"148","severity":1,"message":"160","line":14,"column":10,"nodeType":"150","messageId":"151","endLine":14,"endColumn":29},{"ruleId":"148","severity":1,"message":"161","line":14,"column":31,"nodeType":"150","messageId":"151","endLine":14,"endColumn":51},{"ruleId":"148","severity":1,"message":"162","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":18},{"ruleId":"148","severity":1,"message":"163","line":16,"column":20,"nodeType":"150","messageId":"151","endLine":16,"endColumn":31},{"ruleId":"148","severity":1,"message":"164","line":19,"column":9,"nodeType":"150","messageId":"151","endLine":19,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":43,"column":17,"nodeType":"154","endLine":49,"endColumn":18},{"ruleId":"148","severity":1,"message":"165","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":23},{"ruleId":"148","severity":1,"message":"166","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":13},{"ruleId":"148","severity":1,"message":"167","line":13,"column":9,"nodeType":"150","messageId":"151","endLine":13,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":30,"column":6,"nodeType":"170","endLine":30,"endColumn":8,"suggestions":"171"},{"ruleId":"148","severity":1,"message":"172","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":23,"column":11,"nodeType":"154","endLine":23,"endColumn":51},{"ruleId":"152","severity":1,"message":"153","line":24,"column":11,"nodeType":"154","endLine":24,"endColumn":45},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"173","line":29,"column":9,"nodeType":"150","messageId":"151","endLine":29,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":40,"column":17,"nodeType":"154","endLine":46,"endColumn":18},{"ruleId":"148","severity":1,"message":"174","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":18},{"ruleId":"148","severity":1,"message":"175","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":13},{"ruleId":"168","severity":1,"message":"176","line":23,"column":6,"nodeType":"170","endLine":23,"endColumn":8,"suggestions":"177"},{"ruleId":"148","severity":1,"message":"178","line":21,"column":11,"nodeType":"150","messageId":"151","endLine":21,"endColumn":15},{"ruleId":"144","replacedBy":"179"},{"ruleId":"146","replacedBy":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"@typescript-eslint/no-unused-vars","'vone' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FormNova' is defined but never used.","'Loadmaterials_Nova' is defined but never used.","'ActionButton' is defined but never used.","'istemplateavailable' is assigned a value but never used.","'setTemplateAvailable' is assigned a value but never used.","'template' is assigned a value but never used.","'setTemplate' is assigned a value but never used.","'handleOnselect' is assigned a value but never used.","'standardOrder' is defined but never used.","'Ink' is defined but never used.","'pasteurl' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.inkName' and 'reset'. Either include them or remove the dependency array.","ArrayExpression",["183"],"'substrate' is assigned a value but never used.","'blankTemplate' is assigned a value but never used.","'relative' is defined but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'VoneCollection' and 'data'. Either include them or remove the dependency array.",["184"],"'data' is assigned a value but never used.",["181"],["182"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [props.inkName, reset]",{"range":"189","text":"190"},"Update the dependencies array to be: [VoneCollection, data]",{"range":"191","text":"192"},[1110,1112],"[props.inkName, reset]",[638,640],"[VoneCollection, data]"]