[{"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\index.tsx":"1","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\App.tsx":"2","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Signup.tsx":"3","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Login.tsx":"4","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\AuthContext.tsx":"5","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\PrivateRoute.tsx":"6","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Firebase.tsx":"7","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\Sidebar.tsx":"8","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\SidebarData.tsx":"9","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Logout.tsx":"10","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Main.tsx":"11","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Nova\\NovaHome.tsx":"12","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\VoneHome.tsx":"13","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\hydration.ts":"14","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\Database\\NovaMaterials.ts":"15","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\Buttons\\ActionButtons.tsx":"16","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\index.ts":"17","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\Database\\VoneMaterials.tsx":"18","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\download.ts":"19","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\defaultValue.ts":"20","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\forms\\mainForm.tsx":"21","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\forms\\MainForm.tsx":"22","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Nova\\MatDisplay.tsx":"23","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\forms\\TextInput.tsx":"24"},{"size":255,"mtime":1612811618969,"results":"25","hashOfConfig":"26"},{"size":999,"mtime":1637194730382,"results":"27","hashOfConfig":"26"},{"size":2508,"mtime":1637768865025,"results":"28","hashOfConfig":"26"},{"size":2970,"mtime":1637108705094,"results":"29","hashOfConfig":"26"},{"size":1483,"mtime":1637768149594,"results":"30","hashOfConfig":"26"},{"size":529,"mtime":1612723290861,"results":"31","hashOfConfig":"26"},{"size":1027,"mtime":1615139193659,"results":"32","hashOfConfig":"26"},{"size":821,"mtime":1637034585844,"results":"33","hashOfConfig":"26"},{"size":564,"mtime":1628624102742,"results":"34","hashOfConfig":"26"},{"size":839,"mtime":1628623731829,"results":"35","hashOfConfig":"26"},{"size":1101,"mtime":1637765975153,"results":"36","hashOfConfig":"26"},{"size":441,"mtime":1637787377934,"results":"37","hashOfConfig":"26"},{"size":1422,"mtime":1638409819073,"results":"38","hashOfConfig":"26"},{"size":3029,"mtime":1637191338187,"results":"39","hashOfConfig":"26"},{"size":800,"mtime":1638398529916,"results":"40","hashOfConfig":"26"},{"size":542,"mtime":1638410027142,"results":"41","hashOfConfig":"26"},{"size":50,"mtime":1615418432320,"results":"42","hashOfConfig":"26"},{"size":2776,"mtime":1628716398312,"results":"43","hashOfConfig":"26"},{"size":284,"mtime":1637192428284,"results":"44","hashOfConfig":"26"},{"size":1762,"mtime":1637192456393,"results":"45","hashOfConfig":"26"},{"size":2641,"mtime":1638408838531,"results":"46","hashOfConfig":"26"},{"size":2851,"mtime":1638409707200,"results":"47","hashOfConfig":"26"},{"size":1446,"mtime":1637788901523,"results":"48","hashOfConfig":"26"},{"size":558,"mtime":1638405860422,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"tu8pg0",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\index.tsx",[],["106","107"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\App.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Signup.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Login.tsx",["108"],"import React from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport \"../Main.scss\";\r\n\r\nconst googlelogo =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\";\r\ninterface FormData {\r\n  email: any;\r\n  password: any;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const { handleSubmit } = useForm<FormData>();\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { login, googlelogin }: any = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function onSubmit() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current?.value, passwordRef.current?.value);\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n    setLoading(false);\r\n    history.push(\"/\");\r\n  }\r\n  async function loginwithGoogle() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await googlelogin();\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n    setLoading(false);\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <Card style={{ width: \"25rem\" }}>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Log In</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Form.Group className=\"align-center\">\r\n              <Button\r\n                className=\"align-center\"\r\n                variant=\"outline-primary\"\r\n                onClick={loginwithGoogle}\r\n                block\r\n              >\r\n                <img\r\n                  className=\"align-left\"\r\n                  width=\"20px\"\r\n                  height=\"18px\"\r\n                  src={googlelogo}\r\n                />\r\n                Sign In with Google\r\n              </Button>\r\n            </Form.Group>\r\n            <div className=\"text-center\">or</div>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n        <div className=\"w-100 text-center mt-3\">Forgot Password?</div>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Don't have an account?<Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\AuthContext.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\PrivateRoute.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Firebase.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\Sidebar.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\SidebarData.tsx",["109"],"import HomeIcon from \"@material-ui/icons/Home\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\n//change to hook to avoir rerendering?\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Account\",\r\n    icon: <AccountCircleIcon />,\r\n    link: \"/account\",\r\n  },\r\n  {\r\n    title: \"Home\",\r\n    icon: <HomeIcon />,\r\n    link: \"/\",\r\n  },\r\n  {\r\n    title: \"Dashboard\",\r\n    icon: <DashboardIcon />,\r\n    link: \"/dashboard\",\r\n  },\r\n];\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Logout.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Main.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Nova\\NovaHome.tsx",["110","111","112"],"import { useState } from \"react\";\r\nimport { Loadmaterials_Nova } from \"../Actions/Database/NovaMaterials\";\r\nimport ActionButton from \"../Actions/Buttons/ActionButtons\";\r\nimport MatDisplay from \"./MatDisplay\";\r\n\r\nconst NovaHome: React.FC = () => {\r\n  return (\r\n    <div className=\"Main\">\r\n      <div>\r\n        <h2 className=\"Title\">Select Material</h2>\r\n        <MatDisplay />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaHome;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\VoneHome.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\hydration.ts",["113"],"import { Ink } from \"@volterainc/utils-ink\";\r\n\r\nexport declare const ConductiveInkTypes: {\r\n  ConductiveInk: string;\r\n  FlexibleConductiveInk: string;\r\n  ExperimentalInk: string;\r\n  CustomInk: string;\r\n};\r\nexport declare const SolderPasteTypes: {\r\n  SolderPaste: string;\r\n  Sn63SolderPaste: string;\r\n  CustomPaste: string;\r\n};\r\ntype InkSettingT = {\r\n  min: number;\r\n  max: number;\r\n  defaultValue: number;\r\n  precision: number;\r\n};\r\ntype InkType =\r\n  | typeof ConductiveInkTypes[keyof typeof ConductiveInkTypes]\r\n  | typeof SolderPasteTypes[keyof typeof SolderPasteTypes];\r\ntype LabelT = {\r\n  color: string;\r\n  type?: string;\r\n};\r\ndeclare type HeatingProfileStepT = {\r\n  temperature: number;\r\n  duration: number;\r\n};\r\ndeclare type HeatingProfileT = HeatingProfileStepT[];\r\ndeclare type InkSettingWithOptionalValue = InkSettingT & {\r\n  value?: number;\r\n};\r\ndeclare type SettingsMapWithOptionValues = {\r\n  [key: string]: InkSettingWithOptionalValue;\r\n};\r\ntype InkSettingsWithOptionalValues = {\r\n  [key: string]: SettingsMapWithOptionValues;\r\n};\r\ndeclare type ConstructorArgsT = {\r\n  type: InkType;\r\n  name: string;\r\n  organization: string;\r\n  useBy: string;\r\n  storage: string;\r\n  material?: string;\r\n  description: string;\r\n  label: LabelT;\r\n  settings: InkSettingsWithOptionalValues;\r\n  heatingProfile: HeatingProfileT;\r\n};\r\nexport declare type InkSetting = InkSettingT & {\r\n  value: number;\r\n};\r\ndeclare type SettingsMapT = {\r\n  [key: string]: InkSetting;\r\n};\r\ndeclare type InkSettingsT = {\r\n  [key: string]: SettingsMapT;\r\n};\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\ntype Settings = {\r\n  settings: {\r\n    probing: { [key: string]: InkSettingsT };\r\n    dispensing: { [key: string]: InkSettingsT };\r\n  };\r\n};\r\ntype InkDefinition = {\r\n  name: string;\r\n  type: InkType;\r\n  organization: string;\r\n  useBy: string;\r\n  storage: string;\r\n  material?: string;\r\n  description: string;\r\n  label: LabelT;\r\n  heatingProfile: HeatingProfileT;\r\n  settings: Settings;\r\n};\r\nexport function setDefaultToValue(setting: InkSetting): InkSettingT {\r\n  const { min, max, precision, value } = setting;\r\n  return {\r\n    min,\r\n    max,\r\n    precision,\r\n    defaultValue: value,\r\n  };\r\n}\r\nfunction setSettings(settings: InkSettingsT): Settings {\r\n  const newSettingMap = new Map();\r\n\r\n  for (const [groupName, group] of Object.entries(settings)) {\r\n    const nestedMap = new Map();\r\n    for (const [fieldName, value] of Object.entries(group)) {\r\n      nestedMap.set(fieldName, setDefaultToValue(value));\r\n    }\r\n    newSettingMap.set(groupName, Object.fromEntries(nestedMap));\r\n  }\r\n  return Object.fromEntries(newSettingMap);\r\n}\r\n\r\nexport function createInkDefinition({\r\n  name,\r\n  type,\r\n  organization,\r\n  useBy,\r\n  storage,\r\n  material,\r\n  description,\r\n  label,\r\n  heatingProfile,\r\n  settings,\r\n}: Ink): InkDefinition {\r\n  return {\r\n    name,\r\n    type,\r\n    organization,\r\n    useBy,\r\n    storage,\r\n    material,\r\n    description,\r\n    label,\r\n    heatingProfile,\r\n    settings: setSettings(settings),\r\n  };\r\n}\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\Database\\NovaMaterials.ts",["114","115"],"import { useEffect, useState } from \"react\";\r\nimport { db } from \"../index\";\r\nimport { FetchMaterials_Vone } from \"./VoneMaterials\";\r\n\r\nexport function Loadmaterials_Nova() {\r\n  const [data, setData] = useState([\"\"]);\r\n  const materials = db.collection(\"materials\");\r\n\r\n  useEffect(() => {\r\n    try {\r\n      materials.get().then((querySnapshot) => {\r\n        querySnapshot.docs.forEach((result) => {\r\n          setData((arr) => [...arr, result.data()[\"Id\"]]);\r\n          console.log(result.data());\r\n        });\r\n      });\r\n    } catch {\r\n      console.error();\r\n    }\r\n  }, []);\r\n  return {\r\n    data,\r\n  };\r\n}\r\n\r\n// function getCollection(Id: string) {\r\n\r\n//   db.collection(\"materials\").doc(Id).get().then((querySnapshot => {\r\n//     console.log(querySnapshot)\r\n//   })\r\n\r\n//   return ();\r\n//  }\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\Buttons\\ActionButtons.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\index.ts",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\Database\\VoneMaterials.tsx",["116"],"import { useEffect, useState } from \"react\";\r\nimport { standardOrder, Ink } from \"@volterainc/utils-ink\";\r\nimport { Spinner } from \"@volterainc/ui-core\";\r\nimport { SelectInkButton } from \"@volterainc/ui-ink\";\r\nconst API = {\r\n  ink: \" https://api.github.com/repos/VolteraInc/ink-database/contents/inks\",\r\n  paste:\r\n    \" https://api.github.com/repos/VolteraInc/ink-database/contents/pastes\",\r\n};\r\n\r\n//number of ink per type to display\r\nconst displayLength = 4;\r\n\r\nasync function fetchInk(inkAddress: string) {\r\n  try {\r\n    let response = await fetch(inkAddress);\r\n    const dbObj = await response.json();\r\n\r\n    return dbObj;\r\n  } catch {\r\n    console.error();\r\n  }\r\n}\r\nexport function FetchMaterials_Vone() {\r\n  const [data, setData] = useState([]);\r\n  let inkObj: any = [];\r\n\r\n  useEffect(() => {\r\n    async function fetchAPI() {\r\n      try {\r\n        let responseInk = await fetch(API.ink);\r\n        let responsePaste = await fetch(API.paste);\r\n        const dbInk = await responseInk.json();\r\n        const dbPaste = await responsePaste.json();\r\n        for (let x = 0; x < dbInk.length; x++) {\r\n          inkObj.push(await fetchInk(dbInk[x].download_url));\r\n        }\r\n        for (let x = 0; x < dbPaste.length; x++) {\r\n          inkObj.push(await fetchInk(dbPaste[x].download_url));\r\n        }\r\n        setData(inkObj);\r\n      } catch {\r\n        console.error();\r\n      }\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n  return data;\r\n}\r\n\r\nconst DisplayMaterials = ({ parentCallback }: any) => {\r\n  const data = FetchMaterials_Vone();\r\n  const [isSelected, setIselected] = useState(false);\r\n  const handleOnclick = (selectedInk: any) => {\r\n    parentCallback(selectedInk);\r\n    setIselected(true);\r\n  };\r\n  return (\r\n    <ul>\r\n      {data.length === 0 ? (\r\n        <Spinner label=\"loading materials\" />\r\n      ) : (\r\n        <div className=\"list-inks\">\r\n          {standardOrder(data).map((typeInks) => {\r\n            const type = typeInks[0].type;\r\n            return (\r\n              <div key={type} className=\"ink-selection-list\">\r\n                <div className=\"type\">\r\n                  <h4>{type}</h4>\r\n                </div>\r\n                {typeInks.slice(0, displayLength).map((inks) => {\r\n                  return (\r\n                    // Add Select Ink button\r\n                    <SelectInkButton\r\n                      key={inks.id}\r\n                      ink={new Ink(inks)}\r\n                      disabled={false}\r\n                      checked={isSelected}\r\n                      indicator={\"check\"}\r\n                      onClick={() => handleOnclick(inks)}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nexport default DisplayMaterials;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Actions\\download.ts",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\defaultValue.ts",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\forms\\mainForm.tsx",["117"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\forms\\MainForm.tsx",["118"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Nova\\MatDisplay.tsx",["119","120","121"],"import FormNova from \"./forms/mainForm\";\r\nimport { useState } from \"react\";\r\nimport { Loadmaterials_Nova } from \"../Actions/Database/NovaMaterials\";\r\nimport ActionButton from \"../Actions/Buttons/ActionButtons\";\r\n\r\nconst MatDisplay: React.FC = () => {\r\n  const data = Loadmaterials_Nova().data;\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <div>\r\n        <ul>\r\n          {data.map((val, key) => {\r\n            return (\r\n              <a key={key} className=\"row\" onClick={() => {}}>\r\n                <div id=\"name\">{val}</div>\r\n              </a>\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n        <div\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <div className=\"ActionButtons\">\r\n            <ActionButton\r\n              name=\"Blank Template\"\r\n              disabled={false}\r\n              onClick={() => {}}\r\n            />\r\n            <ActionButton\r\n              name=\"Use Template\"\r\n              disabled={false}\r\n              onClick={() => {}}\r\n            />\r\n            <ActionButton name=\"Update\" disabled={false} />\r\n            <ActionButton name=\"Delete\" disabled={false} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n      <div>\r\n        <button onClick={() => {}}>Back to Templates</button>\r\n        {/* <mainForm materialProps={details}/>  */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatDisplay;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Vone\\forms\\TextInput.tsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":61,"column":17,"nodeType":"128","endLine":66,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":21},{"ruleId":"129","severity":1,"message":"133","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":18},{"ruleId":"129","severity":1,"message":"134","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":28},{"ruleId":"129","severity":1,"message":"135","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":20},{"ruleId":"129","severity":1,"message":"136","line":41,"column":14,"nodeType":"131","messageId":"132","endLine":41,"endColumn":30},{"ruleId":"129","severity":1,"message":"137","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":29},{"ruleId":"138","severity":1,"message":"139","line":20,"column":6,"nodeType":"140","endLine":20,"endColumn":8,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":47,"column":6,"nodeType":"140","endLine":47,"endColumn":8,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"144","line":21,"column":6,"nodeType":"140","endLine":21,"endColumn":8,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"144","line":23,"column":6,"nodeType":"140","endLine":23,"endColumn":8,"suggestions":"146"},{"ruleId":"129","severity":1,"message":"147","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"149","line":15,"column":15,"nodeType":"128","endLine":15,"endColumn":63},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'ExitToAppIcon' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Loadmaterials_Nova' is defined but never used.","'ActionButton' is defined but never used.","'ConstructorArgsT' is defined but never used.","'FetchMaterials_Vone' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'materials'. Either include it or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'inkObj'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has missing dependencies: 'props.ink' and 'reset'. Either include them or remove the dependency array. If 'setNewInk' needs the current value of 'props.ink', you can also switch to useReducer instead of useState and read 'props.ink' in the reducer.",["154"],["155"],"'FormNova' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},"Update the dependencies array to be: [materials]",{"range":"163","text":"164"},"Update the dependencies array to be: [inkObj]",{"range":"165","text":"166"},"Update the dependencies array to be: [props.ink, reset]",{"range":"167","text":"168"},{"range":"169","text":"168"},[575,577],"[materials]",[1409,1411],"[inkObj]",[701,703],"[props.ink, reset]",[768,770]]